services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
        - SKIP_ENV_VALIDATION=true
      target: runner
    container_name: sistema-financeiro-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://user:password@db:5432/sistema_financeiro
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-sistema-financeiro-secret-2024}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - AUTH_TRUST_HOST=true
      - NEXT_TELEMETRY_DISABLED=1
      - SKIP_ENV_VALIDATION=true
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 45s
      timeout: 15s
      retries: 3
      start_period: 60s
    networks:
      - sistema-financeiro-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  db:
    image: postgres:16-alpine
    container_name: sistema-financeiro-db
    environment:
      - POSTGRES_DB=sistema_financeiro
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d sistema_financeiro"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sistema-financeiro-network

volumes:
  postgres_data:
    driver: local

networks:
  sistema-financeiro-network:
    driver: bridge
